export function oryxTinyMap(size: number) {
  const tiles = [
    [
      'dungeonHorizontal1',
      'dungeonHorizontal2',
      'dungeonHorizontal3',
      'dungeonHorizontal4',
      'dungeonHorizontal5',
      'dungeonHorizontal6',
      'dungeonVertical1',
      'dungeonVertical2',
      'dungeonVertical3',
      'dungeonVertical4',
      'dungeonVertical5',
      'dungeonVertical6',
      'dungeonStairsDown',
      'dungeonStairsUp',
      'dungeonWell',
      'dungeonGrate',
    ],
    [
      'caveHorizontal1',
      'caveHorizontal2',
      'caveHorizontal3',
      'caveHorizontal4',
      'caveHorizontal5',
      'caveHorizontal6',
      'caveVertical1',
      'caveVertical2',
      'caveVertical3',
      'caveVertical4',
      'caveVertical5',
      'caveVertical6',
      'caveStairsDown',
      'caveStairsUp',
      'caveWell',
      'caveGrate',
    ],
    [
      'cryptHorizontal1',
      'cryptHorizontal2',
      'cryptHorizontal3',
      'cryptHorizontal4',
      'cryptHorizontal5',
      'cryptHorizontal6',
      'cryptVertical1',
      'cryptVertical2',
      'cryptVertical3',
      'cryptVertical4',
      'cryptVertical5',
      'cryptVertical6',
      'cryptStairsDown',
      'cryptStairsUp',
      'cryptWell',
      'cryptGrate',
    ],
    [
      'cavernHorizontal1',
      'cavernHorizontal2',
      'cavernHorizontal3',
      'cavernHorizontal4',
      'cavernHorizontal5',
      'cavernHorizontal6',
      'cavernVertical1',
      'cavernVertical2',
      'cavernVertical3',
      'cavernVertical4',
      'cavernVertical5',
      'cavernVertical6',
      'cavernStairsDown',
      'cavernStairsUp',
      'cavernWell',
      'cavernGrate',
    ],
    [
      'stoneFloor1',
      'stoneFloor2',
      'stoneFloor3',
      'stoneFloor4',
      'stoneFloor5',
      'stoneFloor6',
      'stoneFloorHole',
    ],
    [
      'dirtFloor1',
      'dirtFloor2',
      'dirtFloor3',
      'dirtFloor4',
      'dirtFloor5',
      'dirtFloor6',
      'dirtFloorHole',
      'dirtFloorPit',
      'grass1',
      'grass2',
      'grass3',
      'grass4',
      'grass5',
      'grass6',
      'grassHole',
      'grassPit',
    ],
    [
      'unknown',
      'stoneTileFloor1',
      'stoneTileFloor2',
      'stoneTileFloor3',
      'stoneTileFloor4',
      'stoneTileFloor5',
      'beigeTileFloor1',
      'beigeTileFloor2',
      'beigeTileFloor3',
      'beigeTileFloor4',
      'beigeTileFloor5',
      'carpet1',
      'carpet2',
      'carpet3',
      'carpetEmblem1',
      'carpetEmblem2',
    ],
    [
      'nothing',
      'dirtTileFloor0',
      'dirtTile',
      'dirtTiles1',
      'dirtTiles2',
      'dirtTiles3',
      'stonePebbleFloor1',
      'stonePebbleFloor2',
      'stonePebbleFloor3',
      'stonePebbleFloor4',
      'stonePebbleFloor5',
      'mossTileFloor1',
      'mossTileFloor2',
      'mossTileFloor3',
      'mossTileFloor4',
      'mossTileFloor5',
    ],
    [
      'waterClearLedge',
      'waterClear',
      'waterLedge1',
      'waterLedge2',
      'water1',
      'water2',
      'slimeClearLedge',
      'slimeClear',
      'slimeLedge1',
      'slimeLedge2',
      'slime1',
      'slime2',
      'oilLedge1',
      'oilLedge2',
      'oil1',
      'oil2',
    ],
    [
      'acidClearLedge',
      'acidClear',
      'acidLedge1',
      'acidLedge2',
      'acid1',
      'acid2',
      'bloodClearLedge',
      'bloodClear',
      'bloodLedge1',
      'bloodLedge2',
      'blood1',
      'blood2',
      'sludgeLedge1',
      'sludgeLedge2',
      'sludge1',
      'sludge2',
    ],
    [
      'woodenDoorClosed',
      'woodenDoorOpen',
      'woodenDoorVerticalClosed',
      'woodenDoorVerticalClosedTop',
      'woodenDoorVerticalOpenTop',
      'woodenDoorVerticalOpen',
      'jailDoorClosed',
      'jailDoorOpen',
      'jailDoorVerticalClosed',
      'jailDoorVerticalClosedTop',
      'jailDoorVerticalOpenTop',
      'jailDoorVerticalOpen',
      'cellarDoorClosed',
      'cellarDoorOpen',
      'cellarDoorOpenUpper',
      'shadow',
    ],
    [
      'stoneDoorClosed',
      'stoneDoorOpen',
      'stoneDoorVerticalClosed',
      'stoneDoorVerticalClosedTop',
      'stoneDoorVerticalOpenTop',
      'stoneDoorVerticalOpen',
      'redDoorClosed',
      'redDoorOpen',
      'redDoorVerticalClosed',
      'redDoorVerticalClosedTop',
      'redDoorVerticalOpenTop',
      'redDoorVerticalOpen',
      'woodenBoards1',
      'woodenBoards2',
      'woodenBoards3',
      'woodenPanel',
    ],
    [
      'crate',
      'brokenCrate',
      'chest',
      'openChestFull',
      'openChestEmpty',
      'sconce1',
      'sconce2',
      'sconceLower1',
      'sconceLower2',
      'tombstone1',
      'tombstone2',
      'lever1',
      'lever2',
      'bearTrap',
      'stoneBoulder',
      'dirtBoulder',
    ],
    [
      'webNW',
      'webNE',
      'webSW',
      'webSE',
      'web',
      'auraHoly',
      'auraBlue',
      'auraRed',
      'auraGreen',
      'auraPurple',
      'auraPurple2',
      'bloodDrops1',
      'bloodDrops2',
      'bloodDrops3',
      'bloodDrops4',
      'bloodDrops5',
    ],
    [
      'grassTuft1',
      'grassTuft2',
      'grassTuft3',
      'grassTuft4',
      'grassTuft5',
      'redMushrooms',
      'purpleMushrooms',
      'yellowMushrooms',
      'lilypad11',
      'lilypad21',
      'lilypad31',
      'lilypad41',
      'lilypad12',
      'lilypad22',
      'lilypad32',
      'lilypad42',
    ],
    ['bookshelf'],
    [
      'grassCut1',
      'grassCut2',
      'grassCut3',
      'grassCut4',
      'grassCut5',
      'shrub1',
      'shrub2',
      'grassTile',
      'grassTiles1',
      'grassTiles2',
      'grassTiles3',
      'campfireUnlit',
      'campfire1',
      'campfire2',
      'throne1',
      'throne2',
    ],
    [
      'buildingWindow1',
      'buildingDoor',
      'buildingDoorOpen',
      'buildingRoofFront1',
      'buildingRoofFront2',
      'buildingRoof1',
      'buildingRoof2',
      'buildingChimney',
      'signBlank',
      'signWeapon',
      'signPotion',
      'signInn',
      'buildingWindow2',
      'statueDragon',
      'statueWarrior',
      'statueMonster',
    ],
    [
      'bones1',
      'bones2',
      'bones3',
      'candles1',
      'candles2',
      'candlesSE1',
      'candlesSE2',
      'candlesNE1',
      'candlesNE2',
      'cauldron1',
      'cauldron2',
      'pots1',
      'pots2',
      'pot',
    ],
    ['web1', 'web2', 'sand', 'sandLedge', 'cactus', 'dirtLedge'],
    [],
    [],
    [],
    ['warriorBlueE1'],
    ['warriorBlueE2'],
    [
      'warriorRedE1',
      'warriorRedS1',
      'warriorRedN1',
      'warriorRedW1',
      'sorceressE1',
      'sorceressS1',
      'sorceressN1',
      'sorceressW1',
    ],
    [
      'warriorRedE2',
      'warriorRedS2',
      'warriorRedN2',
      'warriorRedW2',
      'sorceressE2',
      'sorceressS2',
      'sorceressN2',
      'sorceressW2',
    ],
    [
      'druidE1',
      'druidS1',
      'druidN1',
      'druidW1',
      'sorcE1',
      'sorcS1',
      'sorcN1',
      'sorcW1',
      'archerE1',
      'archerS1',
      'archerN1',
      'archerW1',
    ],
    [
      'druidE2',
      'druidS2',
      'druidN2',
      'druidW2',
      'sorcE2',
      'sorcS2',
      'sorcN2',
      'sorcW2',
      'archerE2',
      'archerS2',
      'archerN2',
      'archerW2',
    ],
    ['goblinSwordE1'],
    ['goblinSwordE2'],
    ['skeletonE1'],
    ['skeletonE2'],
    ['vampireE1'],
    ['vampireE2'],
    ['demonE1'],
    ['demonE2'],
    [
      'catBrownE1',
      'catBrownS1',
      'catBrownN1',
      'catBrownW1',
      'catTanE1',
      'catTanS1',
      'catTanN1',
      'catTanW1',
    ],
    [
      'catBrownE2',
      'catBrownS2',
      'catBrownN2',
      'catBrownW2',
      'catTanE2',
      'catTanS2',
      'catTanN2',
      'catTanW2',
    ],
    ['spiderE1'],
    ['spiderE2'],
    [
      'guyE1',
      'guyS1',
      'guyN1',
      'guyW1',
      'girlE1',
      'girlS1',
      'girlN1',
      'girlW1',
      'thiefE1',
      'thiefS1',
      'thiefN1',
      'thiefW1',
    ],
    [
      'guyE2',
      'guyS2',
      'guyN2',
      'guyW2',
      'girlE2',
      'girlS2',
      'girlN2',
      'girlW2',
      'thiefE2',
      'thiefS2',
      'thiefN2',
      'thiefW2',
    ],
    ['kingE1'],
    ['kingE2'],
    ['birdE1'],
    ['birdE2'],
    ['angelE1'],
    ['angelE2'],
    [
      'plantE1',
      'plantS1',
      'plantN1',
      'plantW1',
      'bugE1',
      'bugS1',
      'bugN1',
      'bugW1',
      'horseE1',
      'horseS1',
    ],
    [
      'plantE2',
      'plantS2',
      'plantN2',
      'plantW2',
      'bugE2',
      'bugS2',
      'bugN2',
      'bugW2',
      'horseE2',
      'horseS2',
    ],
    [],
    [],
    [],
    [],
    [
      'spiderRed1',
      'spiderRed2',
      'spiderBlack1',
      'spiderBlack2',
      'scorpionRed1',
      'scorpionRed2',
      'scorpionBlack1',
      'scorpionBlack2',
    ],
    [],
    [],
    [],
    ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0', 'A', 'B', 'C', 'D', 'E', 'F'],
    ['G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V'],
    ['W', 'X', 'Y', 'Z', '!', '@', '#', '$', '%', '^', '&', '*', '(', ')', '-'],
    [
      '=',
      '+',
      '.',
      ',',
      ':',
      ';',
      '"',
      '<',
      '>',
      '?',
      '\\',
      '/',
      '|',
      'mdash',
      'note',
      'smile',
      'sad',
    ],
  ]

  return tiles.reduce((acc, curr, y) => {
    const row = curr.reduce((rAcc, rCurr, x) => {
      const tile = { [rCurr]: [x * size, y * size] } as Record<string, [number, number]>
      return { ...rAcc, ...tile }
    }, {} as Record<string, [number, number]>)

    return { ...acc, ...row }
  }, {} as Record<string, [number, number]>)
}

const letters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
const punctuation = '!@#$%^&*()-=+.,:;"<>?\\/|-:'
const numbers = '1234567890'

// get a range of tiles in the ROT format
const mapRange = (
  chars: string,
  y: number,
  tileSize: number
): { [key: string]: [number, number] } => {
  return chars.split('').reduce((acc, curr, i) => {
    return (acc = { ...acc, [curr]: [tileSize * i, tileSize * y] })
  }, {})
}

const mapChar = (x: number, y: number, tileSize: number): [number, number] => {
  return [x * tileSize, y * tileSize]
}

const t = 32 // main tileset size
export const tileMapOryxMain = {
  ...mapRange(letters, 6, t),
  ...mapRange(letters.toLocaleLowerCase(), 6, t),
  ...mapRange(numbers, 7, t),
  ...mapRange(punctuation, 5, t),
  "'": mapChar(27, 3, t),
  ' ': mapChar(27, 0, t),
} satisfies { [key: string]: [number, number] }

export function oryxTinyFontMap(xSize: number, ySize: number) {
  const tiles = [
    'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789 '.split(''),
    '!@#$%^&*()-+=:;,"<>.?/\\[]_|'.split(''),
  ]

  const tilesLower = ['abcdefghijklmnopqrstuvwxyz'.split('')]

  const tileKey1 = tiles.reduce((acc, curr, y) => {
    const row = curr.reduce((rAcc, rCurr, x) => {
      const tile = { [rCurr]: [x * xSize, y * ySize] } as Record<string, [number, number]>
      return { ...rAcc, ...tile }
    }, {} as Record<string, [number, number]>)

    return { ...acc, ...row }
  }, {} as Record<string, [number, number]>)

  const tileKey2 = tilesLower.reduce((acc, curr, y) => {
    const row = curr.reduce((rAcc, rCurr, x) => {
      const tile = { [rCurr]: [x * xSize, y * ySize] } as Record<string, [number, number]>
      return { ...rAcc, ...tile }
    }, {} as Record<string, [number, number]>)

    return { ...acc, ...row }
  }, {} as Record<string, [number, number]>)

  return { ...tileKey1, ...tileKey2 }
}
