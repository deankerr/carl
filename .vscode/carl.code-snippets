{
  // Place your carl workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }

  "Template": {
    "prefix": "ttemplate",
    "body": ["${1:KEY}: {", " name: '${2:NAME}',", " tiles: [''],", " tag: ['${3:TYPETAG}'],", "}"],
    "description": "CARL Template"
  },

  "System": {
    "prefix": "newsystem",
    "body": [
      "import { Engine } from '../Core/Engine'",
      "",
      "export const ${1:SYSTEM} = (engine: Engine, isPlayerTurn: boolean) => {",
      " const { local } = engine",
      " const [eActing] = local.get('acting', 'position')",
      " const { acting: action } = eActing",
      "",
      " if (!('${2:ACTION}' in action)) return",
      "",
      " // system body",
      "",
      "}"
    ],
    "description": "CARL New System Template"
  },

  "Region Generator": {
    "prefix": "newgen",
    "body": [
      "import { CONFIG } from '../config'",
      "import { Region } from '../Core'",
      "import { Overseer3 } from './Overseer3'",
      "",
      "export function ${1:NAME}(isTopLevel: boolean, width = CONFIG.generateWidth, height = CONFIG.generateHeight) {",
      " const region = new Region(width, height, '$1')",
      " const O3 = new Overseer3(region, '${2:THEME}')",
      " O3.room(region.rect)",
      " O3.snap('Begin')",
      "",
      " // generator",
      "",
      " O3.finalize()",
      " return region",
      "}"
    ],
    "description": "CARL generator template"
  },

  "X/Y Arguments": {
    "prefix": "xynumber",
    "body": ["x: number, y: number"],
    "description": "x/y: number arguement"
  },

  "X/Y/W/H Arguments": {
    "prefix": "xywhnumber",
    "body": ["x: number, y: number, width: number, height: number"],
    "description": "x/y/width/height: number arguement "
  },

  "W/H Arguments": {
    "prefix": "whnumber",
    "body": ["width: number, height: number"],
    "description": "w/h: number"
  },

  "import ROT.JS": {
    "prefix": "improt",
    "body": "import * as ROT from 'rot-js'",
    "description": "Import our favourite roguelike library."
  }
}
