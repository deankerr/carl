{
  // Place your carl workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }

  "New Component": {
    "prefix": "newcomp",
    "body": [
      "import { Component } from '.'",
      "",
      "export interface $TM_FILENAME_BASE extends Component {",
      "  id: '$TM_FILENAME_BASE'",
      "  $1",
      "}",
      "",
      "export function $TM_FILENAME_BASE(): $TM_FILENAME_BASE {",
      "  return { id: '$TM_FILENAME_BASE' }",
      "}"
    ],
    "description": "CARL! Component Template",
    "isFileTemplate": true
  },

  "X Y Arguments": {
    "prefix": "xynumber",
    "body": ["x: number, y: number"],
    "description": "x/y: number arguement"
  },

  "xywh Args": {
    "prefix": "xywhnumber",
    "body": ["x: number, y: number, width: number, height: number"],
    "description": "x/y/width/height: number arguement "
  },

  "wh argrs": {
    "prefix": "wh:number",
    "body": ["width: number, height: number"],
    "description": "w/h: number"
  },

  "2D XY For loop": {
    "prefix": "for2d",
    "body": [
      "for (let yi = 0; yi <= $1.length; yi++) {",
      "  for (let xi = 0; xi <= $1[yi].length; xi++) {",
      "   ${2:// body}",
      " }",
      "}"
    ],
    "description": "2D XY For loop"
  }
}
